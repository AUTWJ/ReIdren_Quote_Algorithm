# Create Tour class
class Tour:   
   def __init__(self, attributes, price):
      self.attributes = attributes
      self.price = price
   
   def getPrice(self):
      return self.price
   
   def getAttributes(self):
      return self.attributes

# Import values from form
orgType = input_data.get('orgType')
tierType = input_data.get('tierType')
tourDescription = input_data.get('tourDescription')
price = 0

# Determine Tier Type
if tierType == 'Option One':
    tierType = '4 to 8 people'
elif tierType == 'Option Two':
    tierType = '9 to 20 people'
elif tierType == 'Option Three':
    tierType = '21 to 40 people'

# Determine Org Type
if orgType == 'Option One':
    orgType = 'Local Community Group'
elif orgType == 'Option Two':
    orgType = 'Educational/Non-Profit Group'
elif orgType == 'Option Three':
    orgType = 'Corporate Group'
else:
    orgType = 'Other'

# Determine Tour Description
if tourDescription == 'Option One':
    tourDescription = '\'New Guinea\' (2hrs Haymarket/Long Wharf/North End)'
elif tourDescription == 'Option Two':
    tourDescription = '\'Negro Town\' (2hrs Beacon Hill/Boston Common/West End)'
elif tourDescription == 'Option Three':
    tourDescription = '400 Years in 4 Stops: Unfolding Boston\'s Racial Reality'
elif tourDescription == 'Option Four':
    tourDescription = 'Phillis Wheatley Peters: Genius Vibes (Seasonal Partnership w/Denise Plays Hard Events'
elif tourDescription == 'Option Five':
    tourDescription = 'Museum of Fine Arts: Blacknically'
else:
    tourDescription = 'Customized'

#Tour Combinations and Prices
tours = [] 
tours.append(Tour(["Corporate Group", "4 to 8 people"], 800))
tours.append(Tour(["Corporate Group", "9 to 20 people"], 720))
tours.append(Tour(["Corporate Group", "21 to 40 people"], 680))

tours.append(Tour(["Educational/Non-Profit Group", "4 to 8 people"], 600))
tours.append(Tour(["Educational/Non-Profit Group", "9 to 20 people"], 540))
tours.append(Tour(["Educational/Non-Profit Group", "21 to 40 people"], 510))

tours.append(Tour(["Local Community Group", "4 to 8 people"], 360))
tours.append(Tour(["Local Community Group", "9 to 20 people"], 400))
tours.append(Tour(["Local Community Group", "21 to 40 people"], 380))

# Create Requested Tour
requestedTour = [orgType, tierType]

# Loop through tour combinations looking for correct tour
for item in tours:
   if(requestedTour == item.getAttributes()):
      price = item.getPrice()
      break

# Add Wave fee to price
feePrice = price + (price * (0.029) + 0.6)

# Get today's date and due date for invoice
from datetime import date, timedelta
today = str(date.today())
dueDate = str(date.today() + timedelta(days=10))

output = {'tourType': 'Walking', 'tierType': tierType, 'orgType': orgType, 'price': price, 'feePrice': feePrice, 'today': today, 'dueDate': dueDate, 'tourDescription': tourDescription}
