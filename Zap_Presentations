# Create Tour class
class Tour:   
   def __init__(self, attributes, price):
      self.attributes = attributes
      self.price = price
   
   def getPrice(self):
      return self.price
   
   def getAttributes(self):
      return self.attributes

# Import values from form
orgType = input_data.get('orgType')
tierType = input_data.get('tierType')
presentationDescription = input_data.get('presentationDescription')
price = 0

# Determine Tier Type
if tierType == 'Option One':
    tierType = '8 to 25 people'
elif tierType == 'Option Two':
    tierType = '26 to 45 people'
elif tierType == 'Option Three':
    tierType = '46+ people'

# Determine Org Type
if orgType == 'Option One':
    orgType = 'Local Community Group/Libraries/Edus/Non-profits'
elif orgType == 'Option Two':    
    orgType = 'Corporate Group'
else:
    orgType = 'Other'

# Determine Presentation Description
if presentationDescription == 'Option One':
    presentationDescription = 'Hidden History of Black Boston: 400 Years in 90 Minutes'
elif presentationDescription == 'Option Two':
    presentationDescription = 'Tracing Our Roots: African-American Genealogy'
elif presentationDescription == 'Option Three':
    presentationDescription = 'History of Juneteenth: Freedom Moments in African America'
elif presentationDescription == 'Option Four':
    presentationDescription = 'Black History Connections in Kwanzaa'
else:
    presentationDescription = 'Custom Topics'

#Tour Combinations and Prices
tours = [] 
tours.append(Tour(["Local Community Group/Libraries/Edus/Non-profits", "8 to 25 people"], 450))
tours.append(Tour(["Local Community Group/Libraries/Edus/Non-profits", "26 to 45 people"], 675))

tours.append(Tour(["Corporate Group", "8 to 25 people"], 600))
tours.append(Tour(["Corporate Group", "26 to 45 people"], 900))

# Create Requested Tour
requestedTour = [orgType, tierType]

# Loop through tour combinations looking for correct tour
for item in tours:
   if(requestedTour == item.getAttributes()):
      price = item.getPrice()
      break

# Add Wave fee to price
feePrice = price + (price * (0.029) + 0.6)

# Get today's date and due date for invoice
from datetime import date, timedelta
today = str(date.today())
dueDate = str(date.today() + timedelta(days=10))

output = {'tourType': 'Presentation', 'tierType': tierType, 'orgType': orgType, 'price': price, 'feePrice': feePrice, 'today': today, 'dueDate': dueDate, 'presentationDescription': presentationDescription}
